.. _orientation:

Orientation
===========

.. cpp:class:: Orientation

  Located in :boxlib:`Src/C_BaseLib/Orientation.H` and
  :boxlib:`Src/C_BaseLib/Orientation.cpp`.

  This class encapsulates the orientation of the faces of a
  :cpp:class:`Box` by providing an ordering of each of the faces of a
  :cpp:class:`Box` in :c:macro:`BL_SPACEDIM` dimensions.  This allows
  iterating over all the faces of a :cpp:class:`Box`.  The ordering
  first traverses the :c:macro:`BL_SPACEDIM` low sides from direction
  ``0 .. BL_SPACEDIM-1`` and then the ``BL_SPACEDIM`` high sides from
  direction ``0 ..  BL_SPACEDIM-1``.  This class defines an enumerated
  type ``Side`` to be either ``low`` or ``high``.

  **Constructors and copy assignment operator**

    .. cpp:function:: Orientation ()
      
      The default constructor contructs an invald ``Orientation``.

    .. cpp:function:: Orientation (int dir, Side side)

      Constructs an ``Orientation`` object representing side ``side``
      (``low`` or ``high``) of direction ``dir``.
  
    The copy constructor and copy assignment operator are auto-generated
    by the compiler.
  
  **Destructor**
  
    The destructor is auto-generated by the compiler.
  
  **Member functions**

    .. cpp:function:: operator int () const

      This conversion operator maps an orientation into a unique
      integer in the range ``[0 .. 2*BL_SPACEDIM-1]`` according to the
      ordering (i.e., the ``BL_SPACEDIM`` low sides from direction
      ``0 .. BL_SPACEDIM-1`` followed by the ``BL_SPACEDIM`` high
      sides from direction ``0 ..  BL_SPACEDIM-1``.

    .. cpp::function:: Orientation flip() const

      Returns the opposite orientation.

    .. cpp::function:: int coordDir () const

      Returns the coordinate direction.

    .. cpp::function:: Side faceDir () const

      Returns the orientation of the face -- ``low`` or ``high``.

    .. cpp::function:: bool isLow () const
                       bool isHigh () const

      Returns true if the orientation is low or high.

    .. cpp:function:: operator== (const Orientation& rhs) const
                      operator!= (const Orientation& rhs) const
                      operator<  (const Orientation& rhs) const
                      operator<= (const Orientation& rhs) const
                      operator> (const Orientation& rhs) const
                      operator>= (const Orientation& rhs) const

      Compares two ``Orientation``\ s.

  **Other members**

    .. cpp:enum:: Side
 
      The types are 

        * ``low``
        * ``high``

**Non-member function**

  .. cpp:function:: std::ostream& operator<< (std::ostream& os, Orientation& o)
 
    Performs stream output on ``Orientation``.

.. cpp:class:: OrientationIter

  Located in :boxlib:`Src/C_BaseLib/Orientation.H` and
  :boxlib:`Src/C_BaseLib/Orientation.cpp`.

  This class defines an iterator over the ``Orientation`` of faces of
  a ``Box``.

  **Constructors and copy assignment operator**

    .. cpp:function:: OrientationIter ()

      The default constructor.

    .. cpp:function:: OrientationIter (const Orientation& _face)

      Constructs an iterator on the Orientation.

    The copy constructor and copy assignment operator are auto-generated
    by the compiler.
  
  **Destructor**
  
    The destructor is auto-generated by the compiler.
  
  **Member functions**

    .. cpp:function:: Orientation operator() () const

      Returns the orientation of the current face.

    .. cpp:function:: operator void* ()

      This casting operator casting function can be used to test if
      the iterator is valid.

    .. cpp:function:: rewind()

      Rewind (reset) the iterator the first face.

    .. cpp:function:: OrientationIter& operator-- ()
                      OrientationIter& operator++ ()
                      OrientationIter operator-- (int)
                      OrientationIter operator++ (int)

      Operators pre-decrement, pre-increment, post-decrement, and
      post-increment.

    .. cpp:function:: bool operator== (const OrientationIter& rhs) const
                      bool operator!= (const OrientationIter& rhs) const

      Operators for comparison.

*Example*

  .. code-block:: cpp

    for (OrientationIter face; face; ++face) {
      int iface = face();
      int idir = face().coordDir();
      std::cout << "Face index: " << iface 
                << ", Dimension index " << idir << std::endl;
    }

  Results::

    Face index: 0, Dimension index 0
    Face index: 1, Dimension index 1
    Face index: 2, Dimension index 2
    Face index: 3, Dimension index 0
    Face index: 4, Dimension index 1
    Face index: 5, Dimension index 2
   
.. seealso::

  :c:macro:`BL_SPACEDIM`; :cpp:class:`Box`
